# Generated by Django 5.2.4 on 2025-10-16 16:59

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Fototipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Fototipo')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Fototipo',
                'verbose_name_plural': 'Fototipos',
            },
        ),
        migrations.CreateModel(
            name='Sexo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=20, verbose_name='Sexo')),
            ],
            options={
                'verbose_name': 'Sexo',
                'verbose_name_plural': 'Sexos',
            },
        ),
        migrations.CreateModel(
            name='Interessado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('senha', models.CharField(help_text='Senha criptografada para login', max_length=128, verbose_name='Senha')),
                ('last_login', models.DateTimeField(blank=True, help_text='Data e hora do último login', null=True, verbose_name='Último Login')),
                ('cpf', models.CharField(help_text='Somente números (11 dígitos)', max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve conter exatamente 11 dígitos', regex='^\\d{11}$')], verbose_name='CPF')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome Completo')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('cidade_nascimento', models.CharField(blank=True, default='', max_length=50, verbose_name='Cidade de Nascimento')),
                ('uf_nascimento', models.CharField(blank=True, default='', help_text='Ex: SP, RJ, MG', max_length=2, validators=[django.core.validators.RegexValidator(message='UF deve conter 2 letras maiúsculas', regex='^[A-Z]{2}$')], verbose_name='UF Nascimento')),
                ('nacionalidade', models.CharField(blank=True, default='', max_length=50, verbose_name='Nacionalidade')),
                ('endereco_residencial', models.CharField(blank=True, default='', max_length=50, verbose_name='Endereço Residencial')),
                ('num_endereco', models.CharField(blank=True, default='', max_length=7, verbose_name='Número')),
                ('bairro', models.CharField(blank=True, default='', max_length=30, verbose_name='Bairro')),
                ('complemento', models.CharField(blank=True, default='', max_length=50, verbose_name='Complemento')),
                ('cidade_residencia', models.CharField(blank=True, default='', max_length=50, verbose_name='Cidade de Residência')),
                ('uf_residencia', models.CharField(blank=True, default='', help_text='Ex: SP, RJ, MG', max_length=2, validators=[django.core.validators.RegexValidator(message='UF deve conter 2 letras maiúsculas', regex='^[A-Z]{2}$')], verbose_name='UF Residência')),
                ('telefone', models.CharField(blank=True, default='', help_text='Somente números (10 ou 11 dígitos)', max_length=11, validators=[django.core.validators.RegexValidator(message='Telefone deve conter 10 ou 11 dígitos', regex='^\\d{10,11}$')], verbose_name='Telefone')),
                ('celular', models.CharField(blank=True, default='', help_text='Somente números (10 ou 11 dígitos)', max_length=11, validators=[django.core.validators.RegexValidator(message='Telefone deve conter 10 ou 11 dígitos', regex='^\\d{10,11}$')], verbose_name='Celular')),
                ('email', models.EmailField(blank=True, default='', max_length=100, verbose_name='E-mail')),
                ('programa_social', models.BooleanField(default=False, verbose_name='Participa de Programa Social')),
                ('num_nis', models.CharField(blank=True, default='', help_text='Número de Identificação Social (11 a 15 dígitos)', max_length=15, validators=[django.core.validators.RegexValidator(message='NIS deve conter entre 11 e 15 dígitos', regex='^\\d{11,15}$')], verbose_name='Número NIS')),
                ('necessidades_especiais', models.BooleanField(default=False, verbose_name='Possui Necessidades Especiais')),
                ('fisica', models.BooleanField(default=False, verbose_name='Necessidade Física')),
                ('visual', models.BooleanField(default=False, verbose_name='Necessidade Visual')),
                ('auditiva', models.BooleanField(default=False, verbose_name='Necessidade Auditiva')),
                ('intelectual', models.BooleanField(default=False, verbose_name='Necessidade Intelectual')),
                ('psicossocial', models.BooleanField(default=False, verbose_name='Necessidade Psicossocial')),
                ('multiplas', models.BooleanField(default=False, verbose_name='Necessidades Múltiplas')),
                ('nome_responsavel', models.CharField(blank=True, default='', max_length=50, verbose_name='Nome do Responsável')),
                ('telefone_responsavel', models.CharField(blank=True, default='', max_length=11, validators=[django.core.validators.RegexValidator(message='Telefone deve conter 10 ou 11 dígitos', regex='^\\d{10,11}$')], verbose_name='Telefone do Responsável')),
                ('celular_responsavel', models.CharField(blank=True, default='', max_length=11, validators=[django.core.validators.RegexValidator(message='Telefone deve conter 10 ou 11 dígitos', regex='^\\d{10,11}$')], verbose_name='Celular do Responsável')),
                ('email_responsavel', models.EmailField(blank=True, default='', max_length=100, verbose_name='E-mail do Responsável')),
                ('observacao', models.TextField(blank=True, default='', verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('fototipo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='interessados.fototipo', verbose_name='Fototipo')),
                ('sexo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='interessados.sexo', verbose_name='Sexo')),
            ],
            options={
                'verbose_name': 'Interessado',
                'verbose_name_plural': 'Interessados',
                'ordering': ['nome'],
            },
        ),
    ]
